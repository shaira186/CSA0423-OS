#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define MAX_USERS 10
#define MAX_FILES 10
#define MAX_NAME_LEN 100

typedef struct {
    char filename[MAX_NAME_LEN];
} File;

typedef struct {
    char username[MAX_NAME_LEN];
    File files[MAX_FILES];
    int file_count;
} UserDirectory;

UserDirectory users[MAX_USERS];
int user_count = 0;

void create_user() {
    if (user_count >= MAX_USERS) {
        printf("Maximum number of users reached.\n");
        return;
    }

    char username[MAX_NAME_LEN];
    printf("Enter username: ");
    scanf("%s", username);

    for (int i = 0; i < user_count; i++) {
        if (strcmp(users[i].username, username) == 0) {
            printf("User already exists.\n");
            return;
        }
    }

    strcpy(users[user_count].username, username);
    users[user_count].file_count = 0;
    user_count++;
    printf("User '%s' created.\n", username);
}

void create_file() {
    char username[MAX_NAME_LEN], filename[MAX_NAME_LEN];
    printf("Enter username: ");
    scanf("%s", username);

    int user_index = -1;
    for (int i = 0; i < user_count; i++) {
        if (strcmp(users[i].username, username) == 0) {
            user_index = i;
            break;
        }
    }

    if (user_index == -1) {
        printf("User not found.\n");
        return;
    }

    if (users[user_index].file_count >= MAX_FILES) {
        printf("Maximum number of files for user '%s' reached.\n", username);
        return;
    }

    printf("Enter filename: ");
    scanf("%s", filename);

    for (int i = 0; i < users[user_index].file_count; i++) {
        if (strcmp(users[user_index].files[i].filename, filename) == 0) {
            printf("File already exists for user '%s'.\n", username);
            return;
        }
    }

    strcpy(users[user_index].files[users[user_index].file_count].filename, filename);
    users[user_index].file_count++;
    printf("File '%s' created for user '%s'.\n", filename, username);
}

void delete_file() {
    char username[MAX_NAME_LEN], filename[MAX_NAME_LEN];
    printf("Enter username: ");
    scanf("%s", username);

    int user_index = -1;
    for (int i = 0; i < user_count; i++) {
        if (strcmp(users[i].username, username) == 0) {
            user_index = i;
            break;
        }
    }

    if (user_index == -1) {
        printf("User not found.\n");
        return;
    }

    printf("Enter filename to delete: ");
    scanf("%s", filename);

    int file_index = -1;
    for (int i = 0; i < users[user_index].file_count; i++) {
        if (strcmp(users[user_index].files[i].filename, filename) == 0) {
            file_index = i;
            break;
        }
    }

    if (file_index == -1) {
        printf("File not found for user '%s'.\n", username);
        return;
    }

    for (int i = file_index; i < users[user_index].file_count - 1; i++) {
        strcpy(users[user_index].files[i].filename, users[user_index].files[i + 1].filename);
    }
    users[user_index].file_count--;
    printf("File '%s' deleted for user '%s'.\n", filename, username);
}

void list_files() {
    char username[MAX_NAME_LEN];
    printf("Enter username: ");
    scanf("%s", username);

    int user_index = -1;
    for (int i = 0; i < user_count; i++) {
        if (strcmp(users[i].username, username) == 0) {
            user_index = i;
            break;
        }
    }

    if (user_index == -1) {
        printf("User not found.\n");
        return;
    }

    printf("Files for user '%s':\n", username);
    for (int i = 0; i < users[user_index].file_count; i++) {
        printf("%s\n", users[user_index].files[i].filename);
    }
}

void list_users() {
    if (user_count == 0) {
        printf("No users found.\n");
        return;
    }

    printf("List of users:\n");
    for (int i = 0; i < user_count; i++) {
        printf("%s\n", users[i].username);
    }
}

int main() {
    int choice;

    while (1) {
        printf("\nTwo Level Directory System\n");
        printf("1. Create User\n");
        printf("2. Create File\n");
        printf("3. Delete File\n");
        printf("4. List Files\n");
        printf("5. List Users\n");
        printf("6. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                create_user();
                break;
            case 2:
                create_file();
                break;
            case 3:
                delete_file();
                break;
            case 4:
                list_files();
                break;
            case 5:
                list_users();
                break;
            case 6:
                exit(0);
            default:
                printf("Invalid choice.\n");
        }
    }

    return 0;
}
