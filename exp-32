#include <stdio.h>
#include <stdlib.h>

#define FRAME_SIZE 3 // Number of frames in memory

int frames[FRAME_SIZE];
int counter[FRAME_SIZE];

int isPageInMemory(int page) {
    for (int i = 0; i < FRAME_SIZE; i++) {
        if (frames[i] == page) {
            return i; // Return the index if page is found in memory
        }
    }
    return -1; // Page not found in memory
}

void insertPage(int page, int time) {
    int lruIndex = 0;
    for (int i = 1; i < FRAME_SIZE; i++) {
        if (counter[i] < counter[lruIndex]) {
            lruIndex = i; // Find the least recently used page
        }
    }
    frames[lruIndex] = page; // Replace the LRU page with the new page
    counter[lruIndex] = time; // Update the time counter for the new page
}

void printFrames() {
    for (int i = 0; i < FRAME_SIZE; i++) {
        if (frames[i] != -1) {
            printf("%d ", frames[i]);
        } else {
            printf("- ");
        }
    }
    printf("\n");
}

int main() {
    int n, pageFaults = 0;
    
    // Initialize frames and counters
    for (int i = 0; i < FRAME_SIZE; i++) {
        frames[i] = -1;
        counter[i] = -1;
    }

    printf("Enter the number of page references: ");
    scanf("%d", &n);

    int pageReferences[n];
    printf("Enter the page references: ");
    for (int i = 0; i < n; i++) {
        scanf("%d", &pageReferences[i]);
    }

    for (int i = 0; i < n; i++) {
        int currentPage = pageReferences[i];
        int pageIndex = isPageInMemory(currentPage);

        if (pageIndex == -1) {
            // Page fault occurred
            insertPage(currentPage, i);
            pageFaults++;
            printf("Page fault! Current frames: ");
            printFrames();
        } else {
            // Update the counter of the page already in memory
            counter[pageIndex] = i;
            printf("Page %d already in memory. Current frames: ", currentPage);
            printFrames();
        }
    }

    printf("Total number of page faults: %d\n", pageFaults);

    return 0;
}
