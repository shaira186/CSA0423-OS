#include <stdio.h>
#include <stdlib.h>

#define FRAME_SIZE 3 // Number of frames in memory

int frames[FRAME_SIZE];

// Function to check if a page is in memory
int isPageInMemory(int page) {
    for (int i = 0; i < FRAME_SIZE; i++) {
        if (frames[i] == page) {
            return 1;
        }
    }
    return 0;
}

// Function to find the frame to be replaced using the optimal strategy
int findOptimalFrame(int pages[], int n, int currentIndex) {
    int farthest = currentIndex;
    int frameToReplace = -1;

    for (int i = 0; i < FRAME_SIZE; i++) {
        int j;
        for (j = currentIndex; j < n; j++) {
            if (frames[i] == pages[j]) {
                if (j > farthest) {
                    farthest = j;
                    frameToReplace = i;
                }
                break;
            }
        }

        // If the page is not going to be used in the future, return this frame
        if (j == n) {
            return i;
        }
    }

    return (frameToReplace == -1) ? 0 : frameToReplace;
}

// Function to print the current state of frames
void printFrames() {
    for (int i = 0; i < FRAME_SIZE; i++) {
        if (frames[i] != -1) {
            printf("%d ", frames[i]);
        } else {
            printf("- ");
        }
    }
    printf("\n");
}

int main() {
    int n, pageFaults = 0;

    // Initialize frames with -1 indicating they are empty
    for (int i = 0; i < FRAME_SIZE; i++) {
        frames[i] = -1;
    }

    printf("Enter the number of page references: ");
    scanf("%d", &n);

    int pageReferences[n];
    printf("Enter the page references: ");
    for (int i = 0; i < n; i++) {
        scanf("%d", &pageReferences[i]);
    }

    for (int i = 0; i < n; i++) {
        int currentPage = pageReferences[i];

        if (!isPageInMemory(currentPage)) {
            // Page fault occurred
            int frameToReplace = findOptimalFrame(pageReferences, n, i + 1);
            frames[frameToReplace] = currentPage;
            pageFaults++;
            printf("Page fault! Current frames: ");
            printFrames();
        } else {
            printf("Page %d already in memory. Current frames: ", currentPage);
            printFrames();
        }
    }

    printf("Total number of page faults: %d\n", pageFaults);

    return 0;
}

